<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.peterlavalle.eccentric</groupId>
	<artifactId>eccentric</artifactId>
	<version>1.0-SNAPSHOT</version>

	<!-- copy and pasted POM -->

	<licenses>
		<license>
			<name>GNU Affero General Public License version 3.0</name>
			<url>http://www.gnu.org/licenses/agpl-3.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<distributionManagement>
		<repository>
			<id>DropBox</id>
			<name>DropBox Repository</name>
			<url>file://${user.home}/Dropbox/Public/maven/repository</url>
		</repository>
		<snapshotRepository>
			<uniqueVersion>false</uniqueVersion>
			<id>DropBox SNAPSHOT</id>
			<name>DropBox SnapShot Repository</name>
			<url>file://${user.home}/Dropbox/Public/maven/repository-SNAPSHOT</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>peter.dropbox-SNAPSHOT</id>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://dl.dropboxusercontent.com/u/15094498/maven/repository-SNAPSHOT</url>
		</repository>
		<repository>
			<id>peter.dropbox</id>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://dl.dropboxusercontent.com/u/15094498/maven/repository</url>
		</repository>
	</repositories>

	<properties>
		<encoding>UTF-8</encoding>

		<java.version>1.6</java.version>

		<license.licenseName>agpl_v3</license.licenseName>
		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>

		<scala.version>2.10.4</scala.version>
		<scala.plugin>2.15.2</scala.plugin>
	</properties>

	<profiles>

		<!-- magic to add some blurbs -->
		<profile>
			<id>os.linux</id>
			<activation>
				<os>
					<family>linux</family>
				</os>
			</activation>
			<properties>
				<os.family>linux</os.family>
				<os.executable></os.executable>
			</properties>
		</profile>
		<profile>
			<id>os.windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<os.family>windows</os.family>
				<os.executable>.exe</os.executable>
			</properties>
		</profile>
		<profile>
			<id>os.mac</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<os.family>mac</os.family>
				<os.executable></os.executable>
			</properties>
		</profile>

		<profile>
			<id>release</id>
			<distributionManagement>
				<repository>
					<uniqueVersion>true</uniqueVersion>
					<id>DropBox</id>
					<name>DropBox Repository</name>
					<url>${user.home}/Dropbox/Public/maven/repository</url>
				</repository>
			</distributionManagement>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>deploy</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


	<build>
		<resources>
			<!-- rather than obsessing over how to disable processing on an existing resources folder, we're "just" writing two folders here -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/classpath</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.9</version>
				<configuration>
					<providerImplementations>
						<git>jgit</git>
					</providerImplementations>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-provider-jgit</artifactId>
						<version>1.9</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<providerImplementations>
						<git>jgit</git>
					</providerImplementations>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-provider-jgit</artifactId>
						<version>1.9</version>
					</dependency>
				</dependencies>
			</plugin>


			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>${scala.plugin}</version>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<args>
						<!--
						Fix to work on encrypted Ubuntu hard disks (aka Peter's laptop)
						https://issues.scala-lang.org/browse/SI-4650
						-->
						<arg>-Xmax-classfile-name</arg>
						<arg>128</arg>
					</args>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>2.4</version>
			</plugin>

			<!-- sneak ${project.basedir} into the tests so that I can find the demo's shaders in the compiler tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<systemProperties>
						<property>
							<name>project.basedir</name>
							<value>${project.basedir}</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>

			<!-- attach sources to the project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>

				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- attach tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<version>4.2.2</version>
				<executions>
					<execution>
						<id>antlr</id>
						<goals>
							<goal>antlr4</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>4.2</version>
		</dependency>
	</dependencies>
</project>